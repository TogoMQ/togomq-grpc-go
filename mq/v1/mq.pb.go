// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: mq/v1/mq.proto

package mqv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PubMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Body          []byte                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Postpone      int64                  `protobuf:"varint,3,opt,name=postpone,proto3" json:"postpone,omitempty"`
	Retention     int64                  `protobuf:"varint,4,opt,name=retention,proto3" json:"retention,omitempty"`
	Variables     map[string]string      `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PubMessageRequest) Reset() {
	*x = PubMessageRequest{}
	mi := &file_mq_v1_mq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PubMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubMessageRequest) ProtoMessage() {}

func (x *PubMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_v1_mq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubMessageRequest.ProtoReflect.Descriptor instead.
func (*PubMessageRequest) Descriptor() ([]byte, []int) {
	return file_mq_v1_mq_proto_rawDescGZIP(), []int{0}
}

func (x *PubMessageRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *PubMessageRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *PubMessageRequest) GetPostpone() int64 {
	if x != nil {
		return x.Postpone
	}
	return 0
}

func (x *PubMessageRequest) GetRetention() int64 {
	if x != nil {
		return x.Retention
	}
	return 0
}

func (x *PubMessageRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type PubMessageResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MessagesReceived int64                  `protobuf:"varint,1,opt,name=messages_received,json=messagesReceived,proto3" json:"messages_received,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PubMessageResponse) Reset() {
	*x = PubMessageResponse{}
	mi := &file_mq_v1_mq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PubMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubMessageResponse) ProtoMessage() {}

func (x *PubMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_v1_mq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubMessageResponse.ProtoReflect.Descriptor instead.
func (*PubMessageResponse) Descriptor() ([]byte, []int) {
	return file_mq_v1_mq_proto_rawDescGZIP(), []int{1}
}

func (x *PubMessageResponse) GetMessagesReceived() int64 {
	if x != nil {
		return x.MessagesReceived
	}
	return 0
}

type SubMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"` // wildcard or exact topic
	Batch         int64                  `protobuf:"varint,2,opt,name=batch,proto3" json:"batch,omitempty"`
	SpeedPerSec   int64                  `protobuf:"varint,3,opt,name=speed_per_sec,json=speedPerSec,proto3" json:"speed_per_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubMessageRequest) Reset() {
	*x = SubMessageRequest{}
	mi := &file_mq_v1_mq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubMessageRequest) ProtoMessage() {}

func (x *SubMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_v1_mq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubMessageRequest.ProtoReflect.Descriptor instead.
func (*SubMessageRequest) Descriptor() ([]byte, []int) {
	return file_mq_v1_mq_proto_rawDescGZIP(), []int{2}
}

func (x *SubMessageRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SubMessageRequest) GetBatch() int64 {
	if x != nil {
		return x.Batch
	}
	return 0
}

func (x *SubMessageRequest) GetSpeedPerSec() int64 {
	if x != nil {
		return x.SpeedPerSec
	}
	return 0
}

type SubMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Body          []byte                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Variables     map[string]string      `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubMessageResponse) Reset() {
	*x = SubMessageResponse{}
	mi := &file_mq_v1_mq_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubMessageResponse) ProtoMessage() {}

func (x *SubMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_v1_mq_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubMessageResponse.ProtoReflect.Descriptor instead.
func (*SubMessageResponse) Descriptor() ([]byte, []int) {
	return file_mq_v1_mq_proto_rawDescGZIP(), []int{3}
}

func (x *SubMessageResponse) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SubMessageResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SubMessageResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *SubMessageResponse) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type CountMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"` // wildcard or exact topic
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountMessagesRequest) Reset() {
	*x = CountMessagesRequest{}
	mi := &file_mq_v1_mq_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMessagesRequest) ProtoMessage() {}

func (x *CountMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_v1_mq_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMessagesRequest.ProtoReflect.Descriptor instead.
func (*CountMessagesRequest) Descriptor() ([]byte, []int) {
	return file_mq_v1_mq_proto_rawDescGZIP(), []int{4}
}

func (x *CountMessagesRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type CountMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessagesCount int64                  `protobuf:"varint,1,opt,name=messages_count,json=messagesCount,proto3" json:"messages_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountMessagesResponse) Reset() {
	*x = CountMessagesResponse{}
	mi := &file_mq_v1_mq_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMessagesResponse) ProtoMessage() {}

func (x *CountMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_v1_mq_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMessagesResponse.ProtoReflect.Descriptor instead.
func (*CountMessagesResponse) Descriptor() ([]byte, []int) {
	return file_mq_v1_mq_proto_rawDescGZIP(), []int{5}
}

func (x *CountMessagesResponse) GetMessagesCount() int64 {
	if x != nil {
		return x.MessagesCount
	}
	return 0
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_mq_v1_mq_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mq_v1_mq_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_mq_v1_mq_proto_rawDescGZIP(), []int{6}
}

func (x *HealthCheckRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alive         bool                   `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_mq_v1_mq_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mq_v1_mq_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_mq_v1_mq_proto_rawDescGZIP(), []int{7}
}

func (x *HealthCheckResponse) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

var File_mq_v1_mq_proto protoreflect.FileDescriptor

const file_mq_v1_mq_proto_rawDesc = "" +
	"\n" +
	"\x0emq/v1/mq.proto\x12\x05mq.v1\"\xfc\x01\n" +
	"\x11PubMessageRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x12\n" +
	"\x04body\x18\x02 \x01(\fR\x04body\x12\x1a\n" +
	"\bpostpone\x18\x03 \x01(\x03R\bpostpone\x12\x1c\n" +
	"\tretention\x18\x04 \x01(\x03R\tretention\x12E\n" +
	"\tvariables\x18\x05 \x03(\v2'.mq.v1.PubMessageRequest.VariablesEntryR\tvariables\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"A\n" +
	"\x12PubMessageResponse\x12+\n" +
	"\x11messages_received\x18\x01 \x01(\x03R\x10messagesReceived\"c\n" +
	"\x11SubMessageRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x14\n" +
	"\x05batch\x18\x02 \x01(\x03R\x05batch\x12\"\n" +
	"\rspeed_per_sec\x18\x03 \x01(\x03R\vspeedPerSec\"\xd8\x01\n" +
	"\x12SubMessageResponse\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04body\x12F\n" +
	"\tvariables\x18\x04 \x03(\v2(.mq.v1.SubMessageResponse.VariablesEntryR\tvariables\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\",\n" +
	"\x14CountMessagesRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\">\n" +
	"\x15CountMessagesResponse\x12%\n" +
	"\x0emessages_count\x18\x01 \x01(\x03R\rmessagesCount\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"+\n" +
	"\x13HealthCheckResponse\x12\x14\n" +
	"\x05alive\x18\x01 \x01(\bR\x05alive2\xaf\x02\n" +
	"\tMqService\x12E\n" +
	"\n" +
	"PubMessage\x12\x18.mq.v1.PubMessageRequest\x1a\x19.mq.v1.PubMessageResponse\"\x00(\x01\x12E\n" +
	"\n" +
	"SubMessage\x12\x18.mq.v1.SubMessageRequest\x1a\x19.mq.v1.SubMessageResponse\"\x000\x01\x12L\n" +
	"\rCountMessages\x12\x1b.mq.v1.CountMessagesRequest\x1a\x1c.mq.v1.CountMessagesResponse\"\x00\x12F\n" +
	"\vHealthCheck\x12\x19.mq.v1.HealthCheckRequest\x1a\x1a.mq.v1.HealthCheckResponse\"\x00Bv\n" +
	"\tcom.mq.v1B\aMqProtoP\x01Z+github.com/TogoMQ/togomq-grpc-go/mq/v1;mqv1\xa2\x02\x03MXX\xaa\x02\x05Mq.V1\xca\x02\x05Mq\\V1\xe2\x02\x11Mq\\V1\\GPBMetadata\xea\x02\x06Mq::V1b\x06proto3"

var (
	file_mq_v1_mq_proto_rawDescOnce sync.Once
	file_mq_v1_mq_proto_rawDescData []byte
)

func file_mq_v1_mq_proto_rawDescGZIP() []byte {
	file_mq_v1_mq_proto_rawDescOnce.Do(func() {
		file_mq_v1_mq_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mq_v1_mq_proto_rawDesc), len(file_mq_v1_mq_proto_rawDesc)))
	})
	return file_mq_v1_mq_proto_rawDescData
}

var file_mq_v1_mq_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_mq_v1_mq_proto_goTypes = []any{
	(*PubMessageRequest)(nil),     // 0: mq.v1.PubMessageRequest
	(*PubMessageResponse)(nil),    // 1: mq.v1.PubMessageResponse
	(*SubMessageRequest)(nil),     // 2: mq.v1.SubMessageRequest
	(*SubMessageResponse)(nil),    // 3: mq.v1.SubMessageResponse
	(*CountMessagesRequest)(nil),  // 4: mq.v1.CountMessagesRequest
	(*CountMessagesResponse)(nil), // 5: mq.v1.CountMessagesResponse
	(*HealthCheckRequest)(nil),    // 6: mq.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),   // 7: mq.v1.HealthCheckResponse
	nil,                           // 8: mq.v1.PubMessageRequest.VariablesEntry
	nil,                           // 9: mq.v1.SubMessageResponse.VariablesEntry
}
var file_mq_v1_mq_proto_depIdxs = []int32{
	8, // 0: mq.v1.PubMessageRequest.variables:type_name -> mq.v1.PubMessageRequest.VariablesEntry
	9, // 1: mq.v1.SubMessageResponse.variables:type_name -> mq.v1.SubMessageResponse.VariablesEntry
	0, // 2: mq.v1.MqService.PubMessage:input_type -> mq.v1.PubMessageRequest
	2, // 3: mq.v1.MqService.SubMessage:input_type -> mq.v1.SubMessageRequest
	4, // 4: mq.v1.MqService.CountMessages:input_type -> mq.v1.CountMessagesRequest
	6, // 5: mq.v1.MqService.HealthCheck:input_type -> mq.v1.HealthCheckRequest
	1, // 6: mq.v1.MqService.PubMessage:output_type -> mq.v1.PubMessageResponse
	3, // 7: mq.v1.MqService.SubMessage:output_type -> mq.v1.SubMessageResponse
	5, // 8: mq.v1.MqService.CountMessages:output_type -> mq.v1.CountMessagesResponse
	7, // 9: mq.v1.MqService.HealthCheck:output_type -> mq.v1.HealthCheckResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mq_v1_mq_proto_init() }
func file_mq_v1_mq_proto_init() {
	if File_mq_v1_mq_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mq_v1_mq_proto_rawDesc), len(file_mq_v1_mq_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mq_v1_mq_proto_goTypes,
		DependencyIndexes: file_mq_v1_mq_proto_depIdxs,
		MessageInfos:      file_mq_v1_mq_proto_msgTypes,
	}.Build()
	File_mq_v1_mq_proto = out.File
	file_mq_v1_mq_proto_goTypes = nil
	file_mq_v1_mq_proto_depIdxs = nil
}
